# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  - "*"

pool:
  vmImage: "ubuntu-latest"

variables:
  buildConfiguration: "Release"
  dotnetsdkVersion: "6.x"
  wwwrootDir: "Tailspin.SpaceGame.Web/wwwroot"

steps:
  - task: UseDotNet@2
    displayName: "Use .NET SDK $(dotnetsdkVersion)"
    inputs:
      packageType: sdk
      version: "$(dotnetsdkVersion)"
  - task: Npm@1
    displayName: "Run NPM install"
    inputs:
      verbose: false
  - script: "./node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)"
    displayName: "Compile Sass Assets"
  - task: gulp@1
    displayName: "Run gulp tasks"
  - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
    displayName: "Write build info"
    workingDirectory: $(wwwrootDir)

  - task: DotNetCoreCLI@2
    displayName: "Restore project dependencies"
    inputs:
      command: "restore"
      projects: "**/*.csproj"

  - template: templates/build.yml
    parameters:
      buildConfiguration: "Debug"
  
  - template: templates/build.yml
    parameters:
      buildConfiguration: 'Release'

  # - task: DotNetCoreCLI@2
  #   displayName: "Build the project - $(buildConfiguration)"
  #   inputs:
  #     command: "build"
  #     projects: "**/*.csproj"
  #     arguments: "--no-restore --configuration $(buildConfiguration)"

  # - task: DotNetCoreCLI@2
  #   displayName: "Publish the project- $(buildConfiguration)"
  #   inputs:
  #     command: "publish"
  #     arguments: "--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)"
  #     projects: "**/*.csproj"
  #     publishWebProjects: false
  #     zipAfterPublish: true

  - task: PublishBuildArtifacts@1
    displayName: "Publish Artifact: drop"
    condition: succeeded()
